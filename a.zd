# Begin code block cb_1
# IR: IF cb_3 imm_4 cb_5
# Begin code block cb_3
# End code block cb_3

mov EAX, 0;
cmp 1, EAX;
jz lbl_13__if_else;
# Begin code block cb_5
# IR: MOV var_2__x imm_6
mov EAX, 2;
mov *var_2__x, EAX;
# End code block cb_5

jmp lbl_14__if_end;
:lbl_13__if_else:
# IR: ELSE_IF cb_7 imm_8 cb_9
# Begin code block cb_7
# End code block cb_7

mov EAX, 0;
cmp 3, EAX;
jz lbl_16__if_else;
# Begin code block cb_9
# IR: MOV var_2__x imm_10
mov EAX, 4;
mov *var_2__x, EAX;
# End code block cb_9

jmp lbl_14__if_end
:lbl_16__if_else:
# IR: ELSE cb_11
# Begin code block cb_11
# IR: MOV var_2__x imm_12
mov EAX, 5;
mov *var_2__x, EAX;
# End code block cb_11

:lbl_14__if_end:
# End code block cb_1
:var_2__x: db 0;
