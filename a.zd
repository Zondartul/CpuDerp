# Begin code block cb_14
# IR: IF cb_16 imm_17 cb_18
# Begin code block cb_16
# End code block cb_16

mov EAX, 0;
cmp 1, EAX;
jz lbl_30__if_else;
# Begin code block cb_18
# IR: MOV var_15__x imm_19
mov EAX, 2;
mov *var_15__x, EAX;
# End code block cb_18

jmp lbl_31__if_end;
:lbl_30__if_else:
# IR: ELSE_IF cb_20 imm_21 cb_22
# Begin code block cb_20
# End code block cb_20

mov EAX, 0;
cmp 3, EAX;
jz lbl_33__if_else;
# Begin code block cb_22
# IR: MOV var_15__x imm_23
mov EAX, 4;
mov *var_15__x, EAX;
# End code block cb_22

jmp lbl_31__if_end
:lbl_33__if_else:
# IR: ELSE cb_24
# Begin code block cb_24
# IR: MOV var_15__x imm_25
mov EAX, 5;
mov *var_15__x, EAX;
# End code block cb_24

:lbl_31__if_end:
# End code block cb_14
:var_2__x: db 0;
:var_15__x: db 0;
