# Begin code block cb_1
# IR: MOV var_6__adr_scr imm_7
mov EAX, 67536;
mov *var_6__adr_scr, EAX;
# IR: MOV var_8__scr_I imm_9
mov EAX, 0;
mov *var_8__scr_I, EAX;
# IR: CALL func_2__main [ ] tmp_10
call func_2__main;
add ESP, 0;
mov *tmp_10, eax;
# IR: CALL func_5__infloop [ ] tmp_11
call func_5__infloop;
add ESP, 0;
mov *tmp_11, eax;
# End code block cb_1
# Begin code block cb_56
:func_5__infloop:
# IR: ENTER scp_57__NULL
sub ESP, 11;
# IR: WHILE cb_60 imm_61 cb_62 lbl_58__while_next lbl_59__while_end
:lbl_58__while_next:
# Begin code block cb_60
# End code block cb_60

mov EAX, 0;
cmp 1, EAX;
jz lbl_59__while_end;
# Begin code block cb_62
# End code block cb_62

jmp lbl_58__while_next;
:lbl_59__while_end:
# IR: LEAVE
sub ESP, -11;
ret;
# End code block cb_56
# Begin code block cb_12
:func_2__main:
# IR: ENTER scp_13__NULL
sub ESP, 23;
# IR: CALL func_3__print [ imm_14 imm_15 imm_16 imm_17 ] tmp_18
push imm_17;
push 128;
push 255;
push 0;
call func_3__print;
add ESP, 4;
mov EBP[-19], eax;
# IR: LEAVE
sub ESP, -23;
ret;
# End code block cb_12
# Begin code block cb_19
:func_3__print:
# IR: ENTER scp_20__NULL
sub ESP, 35;
# IR: MOV var_25__i imm_26
mov EAX, 0;
mov EBP[-3], EAX;
# IR: OP INDEX var_21__str var_25__i tmp_28
mov EAX, EBP[21];
mov EBX, EBP[-3];
add EAX, EBX;
mov EBP[-15], EAX;
# IR: MOV var_27__c tmp_28
mov EAX, EBP[-15];
mov EAX, *EAX;
mov EBP[-11], EAX;
# IR: WHILE cb_31 var_27__c cb_32 lbl_29__while_next lbl_30__while_end
:lbl_29__while_next:
# Begin code block cb_31
# End code block cb_31

mov EAX, 0;
cmp EBP[-11], EAX;
jz lbl_30__while_end;
# Begin code block cb_32
# IR: OP INC var_25__i none tmp_33
mov EAX, EBP[-3];
inc EAX;
mov EBP[-19], EAX;
# IR: OP INDEX var_21__str tmp_33 tmp_34
mov EAX, EBP[21];
mov ECX, EBP[-19];
mov ECX, *ECX;
mov EBX, ECX;
add EAX, EBX;
mov EBP[-23], EAX;
# IR: MOV var_27__c tmp_34
mov EAX, EBP[-23];
mov EAX, *EAX;
mov EBP[-11], EAX;
# IR: CALL func_4__putch [ var_24__b var_23__g var_22__r var_27__c ] tmp_35
push EBP[-11];
push EBP[25];
push EBP[29];
push EBP[33];
call func_4__putch;
add ESP, 4;
mov EBP[-27], eax;
# End code block cb_32

jmp lbl_29__while_next;
:lbl_30__while_end:
# IR: LEAVE
sub ESP, -35;
ret;
# End code block cb_19
# Begin code block cb_36
:func_4__putch:
# IR: ENTER scp_37__NULL
sub ESP, 59;
# IR: OP ADD var_8__scr_I imm_42 tmp_43
mov EAX, *var_8__scr_I;
mov EBX, 0;
add EAX, EBX;
mov EBP[-7], EAX;
# IR: OP INDEX var_6__adr_scr tmp_43 tmp_44
mov EAX, *var_6__adr_scr;
mov ECX, EBP[-7];
mov ECX, *ECX;
mov EBX, ECX;
add EAX, EBX;
mov EBP[-11], EAX;
# IR: MOV tmp_44 var_38__c
mov EAX, EBP[21];
mov EBX, EBP[-11];
mov *EBX, EAX;
# IR: OP ADD var_8__scr_I imm_45 tmp_46
mov EAX, *var_8__scr_I;
mov EBX, 1;
add EAX, EBX;
mov EBP[-19], EAX;
# IR: OP INDEX var_6__adr_scr tmp_46 tmp_47
mov EAX, *var_6__adr_scr;
mov ECX, EBP[-19];
mov ECX, *ECX;
mov EBX, ECX;
add EAX, EBX;
mov EBP[-23], EAX;
# IR: MOV tmp_47 var_39__r
mov EAX, EBP[25];
mov EBX, EBP[-23];
mov *EBX, EAX;
# IR: OP ADD var_8__scr_I imm_48 tmp_49
mov EAX, *var_8__scr_I;
mov EBX, 2;
add EAX, EBX;
mov EBP[-31], EAX;
# IR: OP INDEX var_6__adr_scr tmp_49 tmp_50
mov EAX, *var_6__adr_scr;
mov ECX, EBP[-31];
mov ECX, *ECX;
mov EBX, ECX;
add EAX, EBX;
mov EBP[-35], EAX;
# IR: MOV tmp_50 var_40__g
mov EAX, EBP[29];
mov EBX, EBP[-35];
mov *EBX, EAX;
# IR: OP ADD var_8__scr_I imm_51 tmp_52
mov EAX, *var_8__scr_I;
mov EBX, 3;
add EAX, EBX;
mov EBP[-43], EAX;
# IR: OP INDEX var_6__adr_scr tmp_52 tmp_53
mov EAX, *var_6__adr_scr;
mov ECX, EBP[-43];
mov ECX, *ECX;
mov EBX, ECX;
add EAX, EBX;
mov EBP[-47], EAX;
# IR: MOV tmp_53 var_41__b
mov EAX, EBP[33];
mov EBX, EBP[-47];
mov *EBX, EAX;
# IR: OP ADD var_8__scr_I imm_54 tmp_55
mov EAX, *var_8__scr_I;
mov EBX, 4;
add EAX, EBX;
mov EBP[-55], EAX;
# IR: MOV var_8__scr_I tmp_55
mov EAX, EBP[-55];
mov EAX, *EAX;
mov *var_8__scr_I, EAX;
# IR: LEAVE
sub ESP, -59;
ret;
# End code block cb_36
:var_6__adr_scr: db 0;
:var_8__scr_I: db 0;
:tmp_10: db 0;
:tmp_11: db 0;
:imm_17: db 72,0,0,0, 101,0,0,0, 108,0,0,0, 108,0,0,0, 111,0,0,0, 32,0,0,0, 87,0,0,0, 111,0,0,0, 114,0,0,0, 108,0,0,0, 100,0,0,0, 33,0,0,0, 0,0,0,0;
